// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/seymourtang/project-layout/cmd/app/option"
	"github.com/seymourtang/project-layout/internal/data/cache/redis"
	"github.com/seymourtang/project-layout/internal/data/db"
	"github.com/seymourtang/project-layout/internal/repository"
	"github.com/seymourtang/project-layout/internal/server/http"
)

// Injectors from wire.go:

func Build() (*Injector, func(), error) {
	optionOption, err := option.New()
	if err != nil {
		return nil, nil, err
	}
	v := option.NewMySQLConfig(optionOption)
	gormDB, err := db.New(v)
	if err != nil {
		return nil, nil, err
	}
	studentImpl := repository.NewStudentImpl(gormDB)
	v2 := option.NewRedisConfig(optionOption)
	universalClient, cleanup, err := redis.New(v2)
	if err != nil {
		return nil, nil, err
	}
	httpOption := option.NewHttpConfig(optionOption)
	serveMux, cleanup2 := http.New(httpOption)
	injector := NewInjector(studentImpl, universalClient, serveMux)
	return injector, func() {
		cleanup2()
		cleanup()
	}, nil
}
